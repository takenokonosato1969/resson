関数（かんすう）とは、「いくつかの処理をまとめたもの」です。
図では、「あいさつをする」「名前を言う」という2つの処理を「introduce」という名前でまとめています。
実際の関数の書き方を次のスライドから学んでいきましょう。

function()」と書き、
その後ろの中括弧「{ }」の中にまとめたい処理を書くことで関数を用意することができます。
また、このように関数を用意することを「関数を定義する」と呼びますので覚えておきましょう。

関数を定義しただけでは、その中の処理は実行されません。
図のように、関数を定義した際に使用した定数名を用いて、
「定数名()」と書くことで関数の中の処理を実行できます。このことを「関数を呼び出す」と言います。
まずは演習問題で、実際に関数を呼び出してイメージをつかんでみましょう！

const greet = function() {
  console.log("こんにちは！");
  console.log("関数を学習していきましょう！");←何の処理もされない
};

// 関数を呼び出してください
greet();　←これで関数を呼び出せる

右の図のように、「function()」の部分を「() =>」としても、
これまでと同じように関数を定義することができます。これはES6から導入された新しい書き方で、
「function」を用いるよりシンプルに書くことができます。
また、この関数の書き方のことを、特別にアロー関数と呼びます。

アロー関数では、これまでの「function()」の部分を「() =>」と書くこと以外は定義方法は変わりません。
また、呼び出し方もこれまで学習してきた関数と変わりません。
ここからの演習問題では、基本的にアロー関数の書き方を用いるようにしましょう。

const greet=()=>{　←functionはほぼ使わないみたい
  console.log("こんにちは！");
}

// 定数greetを呼び出してください
greet();

引数を受け取る関数を呼び出すには、「定数名(値)」と書きます。関数は指定した値を受け取り、
その値は引数に代入されます。
右の図では、introduceの呼び出し時に「"にんじゃわんこ"」という値が渡され、
引数nameに代入されています。

関数は引数を複数受け取ることもできます。()の中に受け取る引数をコンマ(,)で区切って並べることで、
複数の引数を指定することができます。
引数は、左から順番に「第1引数、第2引数、...」と呼びます。

// 関数の引数にnumber1とnumber2を追加してください
const add = (number1,number2) => {
  // number1とnumber2を足した値をコンソールに出力してください
  console.log(number1+number2);
  
};

// 引数に5と7を渡して関数を呼び出してください
add(5,7);

ここからは、関数の処理結果を呼び出し元で受け取る方法を学びます。
呼び出し元で受け取る処理結果を戻り値（もどりち）と呼び、
このことを「関数が戻り値を返す」と言います。

関数の中でreturnを使うと、呼び出し元で値を受け取れるようになります。
「return 値」と書くことで、関数はその値を戻り値として返します。

呼び出した関数に戻り値がある場合、関数の呼び出し部分がそのまま戻り値に置きかわります。
左の図のように、関数の呼び出し部分を定数に代入することもできます。

const half = (number) => {
  // numberを2で割った値を戻り値として返してください
  return number/2;
};

// 定数resultを定義してください
const result = half(130);

// 「130の半分は〇〇です」となるように出力してください
console.log(`130の半分は${result}です`);


戻り値も引数と同様に、様々な値を用いることができます。
例えば、if文で使うような条件式をreturnすると、
その条件式の結果として得られる真偽値（trueまたはfalse）を返すことができます。

returnについて詳しく見てみましょう。
returnは、戻り値を返すだけでなく、関数の処理を終了させる性質も持っています。
よって、returnの後にある関数内の処理は実行されませんので注意しましょう。

const check = (number) => {
  // numberが3の倍数かどうかを戻り値として返してください
  return number%3 ===0;
  
};

// if文の条件式で、checkを呼び出してください
if (check(123)) {←123は3の倍数かどうかを見たってこと
  console.log("3の倍数です");
} else {
  console.log("3の倍数ではありません");
}


定数や変数の使用できる範囲のことをスコープと呼びます。
スコープは、図のように定数や変数を定義した場所によって異なります。

｛｝内で定義した定数は外側で使おうとするとエラーになるってこと

総合演習　時間を60分に直すコード
// toMinutes関数を定義してください
const toMinutes=(hour,minute)=>{
  return hour*60 + minute;
}

// 定数resultに、toMinutes関数の戻り値を代入してください
const result = toMinutes(3,20);

// 「◯◯分」となるように、分に換算した結果を出力してください
console.log(`${result}分`);
　　　　　　　　↑()に間違えてミス
