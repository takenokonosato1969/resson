Java　Script
文字　＝　文字列　”クォーテーションで囲む必要あり　文字の終わりに；　セミコロン　忘れずに
// これはコメント　実行されない　コメントアウトという

数字は”で囲まない
5+2だと7になる　”で囲むと5+2　になる

×は*　割るは/　余りを求めたいときは%

+で文字も連結可能　"で囲むと数字も文字になるから　"3"+"5"が35になる


変数
変数はデータ（値）の入れ物（箱）
箱についている名前が変数名　箱の中には実際の値（文字列や数値）が入っている

let　変数名＝値と定義

let neme="";
console.log(name)；←実際にでる文字はこれ参照

＝は等しいという意味では例　なく右辺を左辺に代入するという意味　letは変数を定義しますという宣言
変数は”で囲まない


なぜ変数を使うのか
同じ値を繰り返し使える
変更に対応しやすい
値の意味が分かりやすい

変数のルールでは　
◎英単語を用いる　２語以上は大文字で区切る
number　oddNumber等
×数字開始
1namuber
ローマ字　日本語は△

変数を更新するときはletは付けず、(ミスってエラーした）
name=""
更新順は上から下へ


定数
定数は変数に似てる
定数はconst を使う

例　const name=””;

定数は変数のように値を更新できない　しようとするとエラーになる

テンプレートリテラル
${定数}とすることで文字列の中に定数や変数を含めることができる
文字列全体を`で囲む必要あり　バッククォーテーション

例　console.log(`ぼくの名前は${name}です`);

if文
if文にセミコロンは不要
if文を書くときはconsoleをタブキーでインデントする

例 if(level > 10){
    console.log("レベルが10より大きいです");
 }


true
trueとは真偽値
真偽値にはtrueとfalseという2つの値しか存在しない
条件式は、成り立つと「true」、成り立たなければ「false」という真偽値に置き換わる。

等価演算子
比較演算子には、左と右の値が等しいかを調べるものもあります。
「a == b」はaとbが等しければtrue、等しくなければfalseになります

厳密等価演算子を使うと、文字列「"12"」と数値「12」を異なるデータとして扱うことができます。
特に理由がなければ、厳密に比較できる厳密等価演算子を利用するようにしましょう。

a===b　厳密に等しい
a!==b　厳密に異なる

例：const password = "ninjawanko";

if(password==="ninjawanko"){
    console.log("ログインに成功しました");
}


else if文減らせる

swicth文
セミコロン；不要

switch(color){
case"赤":
console.log("ストップ");
break;
}

caseは処理を分けるというやつ　breakはswicth文を終了する命令

caseが一致しない場合　default でブロックされる